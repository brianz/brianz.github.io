<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vpc on Brian Z</title>
    <link>http://blog.brianz.bz/tags/vpc/</link>
    <description>Recent content in Vpc on Brian Z</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016-2017. All rights reserved.</copyright>
    <lastBuildDate>Sun, 20 May 2018 22:26:15 -0600</lastBuildDate>
    
	<atom:link href="http://blog.brianz.bz/tags/vpc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The Dark Art of AWS VPC Networking</title>
      <link>http://blog.brianz.bz/post/dark-art-of-vpc-networking/</link>
      <pubDate>Sun, 20 May 2018 22:26:15 -0600</pubDate>
      
      <guid>http://blog.brianz.bz/post/dark-art-of-vpc-networking/</guid>
      <description>It&amp;rsquo;s been quite some time since a blog post went up here. The reason for this is mainly due to my book with Packt Publishing, Serverless Design Patterns and Best Practices. Happily I can say that it&amp;rsquo;s published and I can turn my technical attention to other things.
In chapters 2 and 3, I walk through setting up serverless REST and GraphQL APIs, respectively. Both patterns use RDS as a backend datastore.</description>
    </item>
    
    <item>
      <title>Accessing VPC Resources from AWS Lambda</title>
      <link>http://blog.brianz.bz/post/accessing-vpc-resources-with-lambda/</link>
      <pubDate>Thu, 02 Nov 2017 22:49:30 -0600</pubDate>
      
      <guid>http://blog.brianz.bz/post/accessing-vpc-resources-with-lambda/</guid>
      <description>I&amp;rsquo;m currently working on a book for Packt publishing titled Serverless Design Patterns and Best Practices.
While writing and whipping out tons of examples is quite a bit of work, and I sometimes curse myself for agreeing to this, I&amp;rsquo;m quite excited as I work through the chapters and as it comes together.
The first three chapters in the book cover different patterns for web applications. In two of these three sections, the logical layer of a 3-tier web application (Presentation, Data, and Logical layers) is, of course, Serverless.</description>
    </item>
    
  </channel>
</rss>