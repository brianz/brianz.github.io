<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Serverless on Brian Z</title>
    <link>http://blog.brianz.bz/tags/serverless/</link>
    <description>Recent content in Serverless on Brian Z</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016-2017. All rights reserved.</copyright>
    <lastBuildDate>Fri, 21 Jul 2017 23:09:49 -0600</lastBuildDate>
    
	<atom:link href="http://blog.brianz.bz/tags/serverless/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Structuring Serverless Applications with Python</title>
      <link>http://blog.brianz.bz/post/structuring-serverless-applications-with-python/</link>
      <pubDate>Fri, 21 Jul 2017 23:09:49 -0600</pubDate>
      
      <guid>http://blog.brianz.bz/post/structuring-serverless-applications-with-python/</guid>
      <description>In spite of my intentions to get more involved in Elixir I&amp;rsquo;ve been stuck in the Python tractor beam.
For all of the issues that may arise in large Python web applications, Python really is a fantastic do-it-all language. As one of my colleagues recently said:
 Python is the second best language for everything.
 I&amp;rsquo;m still a very big fan of the Serverless framework and have been using it almost constantly at work.</description>
    </item>
    
    <item>
      <title>How to setup a free SSL certificate for use with Serverless APIs</title>
      <link>http://blog.brianz.bz/post/custom-https-domains-with-serverless/</link>
      <pubDate>Thu, 16 Feb 2017 21:21:10 -0700</pubDate>
      
      <guid>http://blog.brianz.bz/post/custom-https-domains-with-serverless/</guid>
      <description>NOTE!!!
 As of March 2017 this post is no longer relevant. AWS has updated API Gateway so that you can get a free certificate using AWS Certificate Manager. I&amp;rsquo;m leaving this up for historical purposes but if you need SSL for API Gateway on your own domain please have a look at the Certificate Manager integration&amp;hellip;it&amp;rsquo;s quite easy!
 If you&amp;rsquo;re reading this blog it will become very obvious I&amp;rsquo;m a big fan of the Serverless framework to power AWS Lambda and API Gateway integration.</description>
    </item>
    
    <item>
      <title>Authoring Alexa Skills with Python and Lazysusan</title>
      <link>http://blog.brianz.bz/post/alexa-with-lazysusan/</link>
      <pubDate>Tue, 24 Jan 2017 13:05:21 -0700</pubDate>
      
      <guid>http://blog.brianz.bz/post/alexa-with-lazysusan/</guid>
      <description>Most recently at my day job we were tasked with building an Amazon Alexa app for a client. As soon as I heard rumors that we would be doing an Alexa app I starting raising my hand hoping that I&amp;rsquo;d get put on this project. If you read these blog posts it should become quite apparent I&amp;rsquo;m a pretty big AWS fanboy and Alexa has pretty tight integration with AWS Lambda</description>
    </item>
    
    <item>
      <title>Serverless 1.x</title>
      <link>http://blog.brianz.bz/post/serverless-1.0/</link>
      <pubDate>Wed, 21 Dec 2016 12:04:30 -0700</pubDate>
      
      <guid>http://blog.brianz.bz/post/serverless-1.0/</guid>
      <description>Since my last posts on Serverless, Serverless has gone 1.0. In fact, as of this writing Serverless is at version 1.3. I&amp;rsquo;ve had the luck of taking 1.3 for a spin with my new job by implementing an application for the Amazon Alexa platform. Alexa has a really nice integration with Lambda and we&amp;rsquo;ve been using Serverless to do our Lambda development. Our development pace has been insanely high and much of that can be attributed to Serverless.</description>
    </item>
    
    <item>
      <title>Serverless part IV</title>
      <link>http://blog.brianz.bz/post/serverless-part-iv/</link>
      <pubDate>Fri, 01 Jul 2016 11:55:51 -0600</pubDate>
      
      <guid>http://blog.brianz.bz/post/serverless-part-iv/</guid>
      <description>Welcome to part four in my series about Serverless. As a reminder, there are now three other parts you can read if you aren&amp;rsquo;t coming here from those posts already:
 Serverless Part I Serverless Part II Serverless Part III  In the previous posts I worked through some of the basics of Serverless and stood up an API endpoint which returned HTML. Now I&amp;rsquo;d like to start working through some more real-world examples and talk through some warts I&amp;rsquo;ve found with Serverless.</description>
    </item>
    
    <item>
      <title>Serverless part III</title>
      <link>http://blog.brianz.bz/post/serverless-part-iii/</link>
      <pubDate>Thu, 02 Jun 2016 17:01:36 -0600</pubDate>
      
      <guid>http://blog.brianz.bz/post/serverless-part-iii/</guid>
      <description>This is part three in my series about creating serverless systems using AWS API Gateway + Lambda via the Serverless project. If you&amp;rsquo;re haven&amp;rsquo;t already you can read part I and part II.
My goal is to continue evolving this example to walk through a non-trivial example of doing something with the serverless architecture. Along the way I&amp;rsquo;ll demo some useful features which you&amp;rsquo;ll undoubtedly run into when doing real development with Serverless.</description>
    </item>
    
    <item>
      <title>Serverless part II</title>
      <link>http://blog.brianz.bz/post/serverless-part-ii/</link>
      <pubDate>Mon, 02 May 2016 22:08:40 -0600</pubDate>
      
      <guid>http://blog.brianz.bz/post/serverless-part-ii/</guid>
      <description>Following up from my last post about serverless systems, let&amp;rsquo;s do a walk-through of the Serverless project.
Getting started As usual I&amp;rsquo;ll demo this using a Docker container. You can check out the code on Github and follow along: https://github.com/brianz/serverless-demo.
This Docker image has Serverless v0.5.5&amp;hellip;and that&amp;rsquo;s about it. I use a basic Makefile to build and run the container. You can take a look at it yourself and change the container name if you&amp;rsquo;d like to follow along.</description>
    </item>
    
    <item>
      <title>Serverless part I</title>
      <link>http://blog.brianz.bz/post/serverless-part-i/</link>
      <pubDate>Wed, 20 Apr 2016 16:08:07 -0600</pubDate>
      
      <guid>http://blog.brianz.bz/post/serverless-part-i/</guid>
      <description>It&amp;rsquo;s a pretty exciting (and challenging) time to build software-based applications. Every week there are more and more tools to make our jobs easier or to enable us to focus on application development rather than dealing with the infrastructure around those applications. Of course, this makes our jobs challenging since we need to keep up with the innovation.
This will be part one of a multi-part series about &amp;ldquo;serverless&amp;rdquo; architecture/design.</description>
    </item>
    
  </channel>
</rss>